services:
  influxdb:
    image: influxdb:2.7-alpine
    container_name: influxdb-instance
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpassword
      DOCKER_INFLUXDB_INIT_ORG: myorg
      DOCKER_INFLUXDB_INIT_BUCKET: mybucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-auth-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
      - ./config/influxdb.yml:/etc/influxdb2/config.yml:ro
    ports:
      - "8086:8086"
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  backup:
    build: ./backup
    container_name: influxdb-backup
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: my-super-secret-auth-token
      INFLUXDB_ORG: myorg
      INFLUXDB_BUCKET: mybucket
      BACKUP_RETENTION_DAYS: 30
      FULL_BACKUP_RETENTION_DAYS: 365
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./backups:/backups
      - ./remote:/remote
      - backup_logs:/var/log
      - ./scripts/backup:/scripts:ro
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f backup"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  restore:
    build: ./restore
    container_name: influxdb-restore
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: my-super-secret-auth-token
      INFLUXDB_ORG: myorg
      INFLUXDB_BUCKET: mybucket
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./backups:/backups:ro
      - ./remote:/remote:ro
      - restore_logs:/var/log
      - ./scripts/restore:/scripts:ro
    networks:
      - appnet
    profiles:
      - restore
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f restore"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  monitor:
    build: ./monitor
    container_name: influxdb-monitor
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: my-super-secret-auth-token
      INFLUXDB_ORG: myorg
      INFLUXDB_BUCKET: mybucket
      ALERT_EMAIL: admin@example.com
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./logs:/logs
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  appnet:
    driver: bridge

volumes:
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  backup_logs:
    driver: local
  restore_logs:
    driver: local
